/*
 * One-time Password Service
 *
 * One time password service built in Goglang that uses redis for keystore and can get user information from mongo or postgres.
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package main

import (
	"log"
	"os"

	// WARNING!
	// Pass --git-repo-id and --git-user-id properties when generating the code
	//
	"github.com/blurbee/otpserver/api"
	svr "github.com/blurbee/otpserver/server/go"
	getopt "github.com/pborman/getopt/v2"
)

var cfgFile string
var routes svr.ApiHandleFunctions

func init() {

	getopt.Flag(&cfgFile, 'c', "config", "config file")
	cfg, err := InitEnvironment(cfgFile)
	if err != api.OK {
		log.Fatal("InitEnvironment failed")
		os.Exit(-1)
	}
	routes, err = svr.Init(cfg)
	if err != api.OK {
		log.Fatal("Init failed")
		os.Exit(-1)
	}
}

func main() {

	log.Printf("Server started")

	router := svr.NewRouter(routes)

	log.Fatal(router.Run(":8080"))
}
